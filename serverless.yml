service: serverless-api

frameworkVersion: '3'

useDotenv: true

plugins:
  - serverless-offline
  - serverless-esbuild
  - serverless-dynamodb-local

custom:
  esbuild:
    bundle: true
    minify: false
    sourcemap: true
    exclude:
     - aws-sdk
    target: node14
    platform: node
    concurrency: 10
  dynamodb:
    stages:
      - dev
      - local
    start:
      port: 8000
      inMemory: true
      migrate: true

provider:
  name: aws
  runtime: nodejs14.x
  region: sa-east-1
  iam:
    role:
      name: serverless-api-dynamodb-access
      statements:
        - Effect: Allow
          Action:
            - dynamodb:*
          Resource: "*"
        - Effect: Allow
          Action:
            - s3:*
          Resource: "*"
  environment:
    COUNTAPI_NAMESPACE: ${env:COUNTAPI_NAMESPACE}
    COUNTAPI_KEY: ${env:COUNTAPI_KEY}

package:
  individually: true

functions:
  consultAccess:
    handler: src/functions/consultAccess.handler
    events:
    - http:
        path: /consultAccess
        method: GET
        cors: true
  increaseAccess:
    handler: src/functions/increaseAccess.handler
    events:
    - http:
        path: /increaseAccess
        method: POST
        cors: true
  createUser:
    handler: src/functions/createUser.handler
    events:
    - http:
        path: /createUser
        method: POST
        cors: true
  profileUser:
    handler: src/functions/profileUser.handler
    events:
    - http:
        path: /profileUser/{id}
        method: GET
        cors: true

resources:
  Resources:
    dbUsers:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: users
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH